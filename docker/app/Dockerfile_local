ARG PHP_VERSION
FROM registry.gitlab.com/flagstudio/laraflag:php-${PHP_VERSION}-base-debian

# Add a non-root user to prevent files being created with root permissions on host machine.
ARG PUID=1000
ENV PUID ${PUID}
ARG PGID=1000
ENV PGID ${PGID}

RUN groupadd -g ${PGID} local && \
    useradd -u ${PUID} -g local -m local -G local && \
    usermod -p "*" local

###########################################################################
# Configs
###########################################################################


COPY ./docker/app/laraflag.ini /usr/local/etc/php/conf.d
COPY ./docker/app/www.conf /usr/local/etc/php-fpm.d/www.conf
COPY ./docker/app/supervisord_local.conf /etc/supervisord.conf
COPY ./docker/app/Caddyfile /etc/Caddyfile
COPY ./docker/app/crontab /var/spool/cron/crontabs/root
RUN crontab /var/spool/cron/crontabs/root

###########################################################################
# Opcache:
###########################################################################

ARG PHP_FPM_INSTALL_OPCACHE=true

RUN if [ ${PHP_FPM_INSTALL_OPCACHE} = true ]; then \
    docker-php-ext-install opcache \
;fi

# Copy opcache configration
COPY ./docker/app/opcache.ini /usr/local/etc/php/conf.d/opcache.ini

###########################################################################
# xDebug:
###########################################################################

ARG PHP_FPM_INSTALL_XDEBUG=false

RUN if [ ${PHP_FPM_INSTALL_XDEBUG} = true ]; then \
#    apk add --no-cache $PHPIZE_DEPS \
      pecl install xdebug-2.9.8 \
      && docker-php-ext-enable xdebug \
    ;fi

# Copy xdebug configuration for remote debugging
COPY ./docker/app/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

###########################################################################
# Copy code
###########################################################################

#USER www-data:www-data
#COPY . /var/www/

###########################################################################
# Composer packages
###########################################################################

#USER root
#
#RUN composer install --optimize-autoloader --no-dev --no-scripts
#RUN composer dumpautoload

###########################################################################
# NPM
###########################################################################

#RUN npm i
#RUN npm run prod

###########################################################################
# Prepare Laravel for Prod
###########################################################################

#RUN php artisan package:discover
#RUN php artisan storage:link
#RUN php artisan route:cache


# Micro Editor https://micro-editor.github.io/
RUN curl https://getmic.ro | bash; \
        mv micro /root/micro; \
        echo 'alias m="~/micro"' >> /root/.bashrc

###########################################################################
# Postgresql client:
###########################################################################

RUN set -eux; \
    apt-get update --allow-releaseinfo-change; \
    apt-get upgrade -y; \
    apt-get install -y --no-install-recommends \
        lsb-release \
        libc6 \
        libtinfo6 \
        readline-common \
        libreadline-dev \
        libpq-dev \
        wget \
        gnupg2;

RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | tee  /etc/apt/sources.list.d/pgdg.list

RUN apt-get update --allow-releaseinfo-change -qq && apt-get install -y \
  postgresql-client-12;

###########################################################################
# Set workdir & run:
###########################################################################

WORKDIR /var/www

CMD ["/usr/bin/supervisord", "-n", "-c",  "/etc/supervisord.conf"]

EXPOSE 8080 9000
