version: '3'

services:

### PHP-FPM ##############################################
    php-fpm:
      container_name: php_caddy_app
      build:
        context: .
        dockerfile: docker/php-fpm/Dockerfile
      image: registry.gitlab.com/flagmaker/laraflag:latest # образ, который строим. НЕ ТОТ из которого строимся
      volumes:
        - ${APP_CODE_PATH_HOST}/.env:${APP_CODE_PATH_CONTAINER}/.env
        - ${APP_CODE_PATH_HOST}/storage:${APP_CODE_PATH_CONTAINER}/storage
#        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER} # for dev
      ports:
        - "80:80"


### MySQL ################################################
    mysql:
      build:
        context: ./docker/mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${DB_DATABASE}
        - MYSQL_USER=${DB_USERNAME}
        - MYSQL_PASSWORD=${DB_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/docker/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "127.0.0.1:${MYSQL_PORT}:3306"

      restart: always

  ### PostgreSQL ###########################################
    postgres:
      build: ./docker/postgres
      volumes:
        - ${DATA_PATH_HOST}/docker/postgres:/var/lib/postgresql/data
        - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "127.0.0.1:${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_DB=${DB_DATABASE}
        - POSTGRES_USER=${DB_USERNAME}
        - POSTGRES_PASSWORD=${DB_PASSWORD}



